/* Applies Style to the Whole Page */

:root {
	--reset-color: #999997;
	--d-color: #DDB72B;
	--q-color: #2BB7DD;
	--lut-color: #15BF9A;
	--ff-color: #BF1518;
	--clock-color: #AE15BF;
	--connection-used: lime;
	--connection-unused: var(--on-primary);
	--element-width: 10svh;
	--element-height: 20svh;
	--in-element-height: 18svh;
	--element-margin-top: 5svh;
}

/* Applies Style to the Main Part of the Page */

#visualization-area {
	display: grid;
	grid-template-columns: 8fr 2fr;
}

/* Applies Style to the Left Part of the Page */

#main {
	margin-top: 15svh;
	width: 100%;
	min-height: 85svh;

	font-size: 1vh;
}



#guidelines {
	display: flex;
	justify-content: space-between;
	width: 100%;
	height: 100%;

	div {
		display: flex;
		align-items: center;
		flex-direction: column;
	}

	p {
		margin-top: 1vh;
		color: var(--on-primary);
		align-items: center;
	}
}

#guidelines > div {
	width: 16vw;
	height: 100%;
}

.back-lines {
	margin-top: 1vh;
	height: 80vh;
	width: 0;
	border-width: 0;
	border-left-width: .3vh;
	border-color: grey;
	border-style: dashed;
}

#input-container {
	position: absolute;
	margin-top: var(--element-margin-top);
}

.input-element{
	height: var(--element-height);
	width: var(--element-width);
}

.input-element > div {
	height: var(--in-element-height);
	width: var(--element-width);
	border-radius: 1vh;
	border: .1vh solid var(--on-primary);

	box-sizing: border-box;

	display: grid !important;
	grid-template-columns: repeat(2, 1fr);
	grid-template-rows: repeat(4, 1fr);

	color: var(--on-primary);


	* {
		height: .7svh;
	}
	
}

.input-data{
	text-align: center;
	grid-column: 1/3;
	display: flex;
	justify-content: center;
	align-items: center;
}


.input-out {
	text-align: end;
	grid-column: 2;
	display: flex;
	justify-content: flex-end;
	margin-right: .5svw;
}

.input-out::after{
	position: absolute;
	right: -.7vh;
	transform: translateY(-.2vh);
	content: "";
	display: block;
	width: 1.5vh;
	height: 1.5vh;
	background-color: var(--connection-used);
	border-radius: 50%;
}










.button{
	background-color: var(--button-color);
}

.reset-element > div{
	background-color: var(--reset-color);
}

.data-element > div{
	background-color: var(--d-color);
}


#output-container {
	position: absolute;
	margin-top: var(--element-margin-top);
}

.output-element{
	height: var(--element-height);
	width: var(--element-width);
}


.output-element >div{
	height: var(--in-element-height);
	width: var(--element-width);
	border-radius: 1vh;
	border: .1vh solid var(--on-primary);

	box-sizing: border-box;

	display: grid !important;
	grid-template-columns: repeat(2, 1fr);
	grid-template-rows: repeat(6, 1fr);

	color: var(--on-primary);


}

.q-element > div{
	background-color: var(--q-color);
}

.output-data{
	text-align: center;
	grid-column: 1/3;
	display: flex;
	justify-content: center;
	align-items: center;
}


.output-in.used::before{
	background-color: var(--connection-used);
}


.led{
	background-color: darkorange;
}
.output-in {
	grid-column: 1;
	margin-left: .5svw;
}
.output-in::before{
	position: absolute;
	left: -.7vh;
	transform: translateY(.2vh);
	content: "";
	display: block;
	width: 1.5vh;
	height: 1.5vh;
	background-color: var(--connection-unused);
	border-radius: 50%;
}






.element-state{
	font-weight: bold;
}


#lut-container {
	position: absolute;
	margin-top: var(--element-margin-top);
}

.lut-element{
	height: var(--element-height);
}

.lut-element > div {

	height: var(--in-element-height);
	width: var(--element-width);
	border-radius: 1vh;
	border: .1vh solid var(--on-primary);

	box-sizing: border-box;

	color: var(--on-primary);

	display: grid !important;
	grid-template-columns: repeat(2, 1fr);
	grid-template-rows: repeat(6, 1fr);

	background-color: var(--lut-color);


	* {
		height: .7svh;
	}


}


.lut-id {
	text-align: center;
	grid-column: 1/3;
	grid-row: 1;
}

.lut-in {
	grid-column: 1;
	margin-left: .5svw;
}

.lut-in::before{
	position: absolute;
	left: -.7vh;
	transform: translateY(.4vh);
	content: "";
	display: block;
	width: 1.5vh;
	height: 1.5vh;
	background-color: var(--connection-unused);
	border-radius: 50%;
}

.lut-in.used::before{
	background-color: var(--connection-used);
}


.lut-out {
	text-align: end;
	grid-column: 2;
	grid-row: 2;
	margin-right: .5svw;
}

.lut-out::after{
	position: absolute;
	right: -.7vh;
	transform: translateY(-1.8vh);
	content: "";
	display: block;
	width: 1.5vh;
	height: 1.5vh;
	background-color: var(--connection-unused);
	border-radius: 50%;
}

.lut-out.used::after{
	background-color: var(--connection-used);
}





#ff-container {
	position: absolute;
	margin-top: var(--element-margin-top);
}

.ff-element{
	height: var(--element-height);
	width: var(--element-width);
}


.ff-element > div {
	
	height: var(--in-element-height);
	width: 100%;
	border-radius: 1vh;
	
	background-color: var(--ff-color);
	border: .1vh solid var(--on-primary);
	box-sizing: border-box;

	box-sizing: border-box;

	color: var(--on-primary);

	display: grid !important;
	grid-template-columns: repeat(2, 1fr);
	grid-template-rows: repeat(4, 1fr);

	* {
		height: 3vh;
	}


}

.ff-id {
	margin-top: .8vh;
	text-align: center;
	grid-column: 1/3;
	grid-row: 1;
}

.ff-in {
	align-items: baseline;
	grid-column: 1;
	margin-left: .5svw;
}
.ff-in::before{
	position: absolute;
	left: -.7vh;
	transform: translateY(.4vh);
	content: "";
	display: block;
	width: 1.5vh;
	height: 1.5vh;
	background-color: var(--connection-unused);
	border-radius: 50%;
}

.ff-in.used::before{
	background-color: var(--connection-used);
}


.ff-out {
	text-align: end;
	grid-column: 2;
	grid-row: 2;
	margin-right: .5svw;
}


.ff-out::after{
	position: absolute;
	right: -.7vh;
	transform: translateY(-1.8vh);
	content: "";
	display: block;
	width: 1.5vh;
	height: 1.5vh;
	background-color: var(--connection-unused);
	border-radius: 50%;
}

.ff-out.used::after{
	background-color: var(--connection-used);
}




#clock-container {
	position: absolute;
}


.clock-element > div {
	background-color: var(--clock-color);
}

.clock-id {
	text-align: center;
	grid-column: 1/3;
	grid-row: 1;
}

.clock-out {
	grid-column: 2;
	margin-right: .5svw;
	text-align: end;
}

.clock-out::after{
	position: absolute;
	right: -.7vh;
	transform: translateY(-1.8vh);
	content: "";
	display: block;
	width: 1.5vh;
	height: 1.5vh;
	background-color: var(--connection-used);
	border-radius: 50%;
}



/* Creates lines that connect the elements */

#connections{
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	z-index: -12000;
}

.line.used{
	background-color: var(--connection-used);
	position: absolute;
}


.point.used{
	background-color: var(--connection-used);
	position: absolute;
}

.point.unused{
	fill: red;
}