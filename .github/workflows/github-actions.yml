name: CI

permissions:
  contents: write

on:
  push:
    branches: [ "QA", "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy Application
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          if [[ -z "$deploy_url" ]]; then
            echo "Error: deploy_url is not set!"
            exit 1
          fi
          echo "Triggering deployment..."
          curl -v "$deploy_url"
          sleep 60

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.6.0'

      - name: Install dependencies
        run: |
          cd ./src/test
          npm install
          npm install typescript

      - name: Ensure logs folder exists
        run: mkdir -p ./src/test/logs

      - name: Run tests
        id: run-tests
        run: |
          cd ./src/test
          npx tsc
          for file in *.js; do node "$file"; done
        continue-on-error: true

      - name: Check generated JSON files
        run: ls -l ./src/test/logs

      - name: Commit and push JSON logs to QA
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git stash --include-untracked
          git fetch origin
          if git ls-remote --exit-code --heads origin QA; then
            git checkout QA
            git pull --rebase origin QA
          else
            git checkout -b QA
            git push -u origin QA
          fi
          git stash pop || echo "No stashed changes to restore."
          mkdir -p ./src/test/logs
          if [[ -n $(git status --porcelain src/test/logs/*.json) ]]; then
            git add -f src/test/logs/*.json
            git commit -m "Add generated JSON logs from tests"
            git push origin QA
          else
            echo "No log changes to commit."
          fi
          git checkout dev
          git pull origin dev

  edge-unit-tests:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.6.0'

      - name: Install dependencies
        run: |
          cd ./src/test
          npm install
          npm install typescript

      - name: Install Edge browser
        run: |
          choco install microsoft-edge

      - name: Run unit tests on Edge
        run: |
          cd ./src/test
          npx tsc
          for file in *edge*.js; do node "$file"; done
